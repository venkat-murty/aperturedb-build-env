FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt upgrade -y
RUN apt install -y --no-install-recommends \
    build-essential \
    scons \
    cmake \
    git \
    wget \
    unzip \
    protobuf-compiler \
    openjdk-11-jre \
    libtool \
    libicu-dev \
    libboost-dev \
    libgflags-dev \
    libgflags2.2 \
    libboost-random-dev \
    libboost-date-time-dev \
    libprotobuf-dev \
    libssl-dev \
    libopencv-dev \
    libgtest-dev \
    liblmdb-dev \
    libsqlite3-dev \
    libffmpeg-ocaml-dev \
    libjsoncpp-dev \
    libreadline-dev \
    libcurl-ocaml-dev \
    libopenblas-dev \
    libzookeeper-mt-dev

ENV JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"

RUN ln -s /usr/include/opencv4/opencv2 /usr/include/opencv2

# Google Logging
ARG GLOG_VERSION=0.5.0
RUN wget -q https://github.com/google/glog/archive/refs/tags/v$GLOG_VERSION.tar.gz && \
    tar -xzvf v$GLOG_VERSION.tar.gz && cd glog-$GLOG_VERSION && \
    cmake -S . -B build \
        -D WITH_CUSTOM_PREFIX=ON \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_SHARED_LIBS=OFF \
    && cmake --build build --parallel 16 && cmake --install build && \
    cd .. && \
    rm -rf glog-$GLOG_VERSION && \
    rm v$GLOG_VERSION.tar.gz

# Faiss
ARG FAISS_VERSION=1.7.3
RUN wget -q https://github.com/facebookresearch/faiss/archive/v${FAISS_VERSION}.tar.gz && \
    tar xf v${FAISS_VERSION}.tar.gz && \
    cd faiss-${FAISS_VERSION} && \
    cmake -B build -S . \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_SHARED_LIBS=OFF \
        -D FAISS_ENABLE_GPU=OFF \
        -D FAISS_ENABLE_PYTHON=OFF \
        -D BUILD_TESTING=OFF \
    && cmake --build build --parallel 16 && cmake --install build && \
    cd .. && \
    rm -rf faiss-${FAISS_VERSION} && \
    rm v${FAISS_VERSION}.tar.gz

# Valijson
ARG VALIJSON_VERSION=1.0
RUN wget -q https://github.com/tristanpenman/valijson/archive/v${VALIJSON_VERSION}.tar.gz && \
    tar xf v${VALIJSON_VERSION}.tar.gz && rm v${VALIJSON_VERSION}.tar.gz && \
    cd valijson-${VALIJSON_VERSION} && \
    mkdir -p /usr/local/include && \
    cp -r include/* /usr/local/include/ && \
    cd .. && \
    rm -r valijson-${VALIJSON_VERSION}

# Install prometheus-cpp
ARG PROMETHEUS_VERSION=1.0.0
RUN wget -q https://github.com/jupp0r/prometheus-cpp/releases/download/v${PROMETHEUS_VERSION}/prometheus-cpp-with-submodules.tar.gz && \
    tar xf prometheus-cpp-with-submodules.tar.gz && \
    cd prometheus-cpp-with-submodules && \
    cmake -B build -S . \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_SHARED_LIBS=OFF \
        -D ENABLE_PUSH=OFF \
        -D ENABLE_COMPRESSION=OFF \
    && cmake --build build --parallel 16 && \
    cmake --install build && cmake --install build/pull && \
    cd .. && \
    rm -rf prometheus-cpp-with-submodules && \
    rm prometheus-cpp-with-submodules.tar.gz

# Install roaring bitmap
ARG ROARINGBITMAP_VERSION=0.5.0
RUN wget -q https://github.com/lemire/CRoaringUnityBuild/archive/refs/tags/v${ROARINGBITMAP_VERSION}.zip && \
    unzip -q v${ROARINGBITMAP_VERSION}.zip && \
    cd CRoaringUnityBuild-${ROARINGBITMAP_VERSION} && \
    g++ -I. -c roaring.c && \
    ar r libroaring.a roaring.o && \
    cp roaring.h /usr/local/include/. && \
    cp roaring.hh /usr/local/include/.  && \
    cp libroaring.a /usr/local/lib/libroaring.${ROARINGBITMAP_VERSION}.a && \
    ln -s /usr/local/lib/libroaring.${ROARINGBITMAP_VERSION}.a /usr/local/lib/libroaring.a && \
    cd .. && \
    rm -rf CRoaringUnityBuild-${ROARINGBITMAP_VERSION} && \
    rm v${ROARINGBITMAP_VERSION}.zip

# aws-sdk
ARG AWS_SDK_VERSION=1.11.55
RUN git clone --recurse-submodules https://github.com/aws/aws-sdk-cpp && \
    cd aws-sdk-cpp && \
    git checkout ${AWS_SDK_VERSION} && \
    git submodule update --init --recursive && \
    cmake -B build -S . \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_SHARED_LIBS=OFF \
        -D BUILD_ONLY="s3" \
        -D MINIMIZE_SIZE=ON \
        -D ENABLE_TESTING=OFF \
    && cmake --build build --parallel 16 && cmake --install build && \
    cd .. && \
    rm -rf aws-sdk-cpp
